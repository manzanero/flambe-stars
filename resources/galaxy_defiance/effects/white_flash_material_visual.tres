[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://bm2v8fp80diqp"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_qmj87"]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_55aaj"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_qssal"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;




void fragment() {
// ColorConstant:4
	vec4 n_out4p0 = vec4(1.000000, 1.000000, 1.000000, 1.000000);


// Input:2
	vec4 n_out2p0 = COLOR;


// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;
	float n_out3p3 = n_out2p0.w;


// Output:0
	ALBEDO = vec3(n_out4p0.xyz);
	ALPHA = n_out3p3;


}
"
nodes/fragment/0/position = Vector2(820, 20)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_qmj87")
nodes/fragment/2/position = Vector2(20, 200)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorDecompose_55aaj")
nodes/fragment/3/position = Vector2(320, 140)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorConstant_qssal")
nodes/fragment/4/position = Vector2(200, 40)
nodes/fragment/connections = PackedInt32Array(3, 3, 0, 1, 4, 0, 0, 0, 2, 0, 3, 0)
